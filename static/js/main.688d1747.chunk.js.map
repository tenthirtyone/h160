{"version":3,"sources":["components/SearchBox/SearchBox.js","components/Header/Header.js","components/Footer/Footer.js","components/Home/Home.js","components/Address/AddressInfo/AddressInfo.js","components/Address/TxList/TxInfo/TxInfo.js","components/Address/TxList/TxList.js","components/Address/Address.js","App.js","Router.js","serviceWorker.js","index.js"],"names":["SearchBox","getInputValue","_this","input","value","handleKeyUp","e","keyCode","handleSearch","props","searchAddress","_this2","this","react_default","a","createElement","ref","defaultValue","onKeyUp","placeholder","placeholderText","Component","Header","className","react_router_dom","to","SearchBox_SearchBox","SpotPrice","_ref","spotPrice","Footer","Home","AddressInfo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","qrSize","hasAddressData","id","lib_default","size","concat","address","hash160","final_balance","n_tx","total_received","total_sent","AccountValue","Math","round","pow","TxInfo","toggleDisplay","display","setState","tx","onClick","TxValue","inputs","hash","OutputDetails","outputs","out","map","output","key","script","addr","_ref2","satoshis","forEach","prev_out","SpotPriceUSD","TxList","txs","length","TxInfo_TxInfo_TxInfo","MoreTx","hasMoreTx","getMoreTx","Address","getTxData","match","params","window","onpopstate","ErrorMsg","didError","error","Spinner","pageIsLoaded","AddressInfo_AddressInfo_AddressInfo","TxList_TxList_TxList","addressAPI","priceAPI","App","getSpotPrice","asyncToGenerator","regenerator_default","mark","_callee","response","json","amount","decimalPlaces","wrap","_context","prev","next","fetch","sent","t0","data","indexOf","parseInt","replace","stop","_callee2","_context2","history","location","push","_x","apply","arguments","_ref3","_callee3","_context3","offset","getTxsForAddress","listenForTx","_x2","_callee4","endpoint","_args4","_context4","undefined","pageSize","abrupt","objectSpread","_callee5","_context5","addTransaction","unshift","updateBalances","ws","setInterval","_this3","close","WebSocket","onopen","send","onmessage","event","JSON","parse","x","_this4","Header_Header_Header","react_router","exact","path","render","Home_Home_Home","assign","Address_Address_Address","Footer_Footer_Footer","withRouter","Root","src_App_0","Boolean","hostname","ReactDOM","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kcAGqBA,6MACnBC,cAAgB,WACd,OAAOC,EAAKC,MAAMC,SAGpBC,YAAc,SAACC,GACK,KAAdA,EAAEC,UACJL,EAAKM,eACLN,EAAKC,MAAMC,MAAQ,OAIvBI,aAAe,WACbN,EAAKO,MAAMC,cAAcR,EAAKD,0FAGvB,IAAAU,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,SACEC,IAAK,SAACb,GAAD,OAAWQ,EAAKR,MAAQA,GAC7Bc,aAAcL,KAAKH,MAAML,MACzBc,QAASN,KAAKP,YACdc,YAAaP,KAAKH,MAAMW,yBAtBOC,aCGlBC,0LAEjB,OACET,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,UAChBV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,KAAT,WAEFZ,EAAAC,EAAAC,cAACW,EAAD,CACEhB,cAAeE,KAAKH,MAAMC,cAC1BU,gBAAgB,qCAVQC,oBCHpC,SAASM,EAATC,GAAoC,IAAdC,EAAcD,EAAdC,UACpB,OAAIA,EAEAhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAGAF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,cAAhB,IACKM,IAKF,SAIUC,mLAEjB,OACEjB,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,UAChBV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAACY,EAAD,CAAWE,UAAWjB,KAAKH,MAAMoB,qBALPR,aCffU,0LAEjB,OACElB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,QACdV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACW,EAAD,CACEhB,cAAeE,KAAKH,MAAMC,cAC1BU,gBAAgB,qCATMC,+BCAbW,qBACnB,SAAAA,EAAYvB,GAAO,IAAAP,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAArB,KAAAoB,IACjB9B,EAAA+B,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzB,KAAMH,KACD6B,MAAQ,CACXC,OAAQ,KAHOrC,wEAQjB,OAAIU,KAAKH,MAAM+B,eAEX3B,EAAAC,EAAAC,cAAA,OAAK0B,GAAG,cAAclB,UAAU,OAC9BV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CACE6B,KAAM/B,KAAK0B,MAAMC,OACjBnC,MAAK,GAAAwC,OAAKhC,KAAKH,MAAMoC,WAHzB,KAKAhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMoC,UAElBhC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMqC,UAElBjC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMsC,gBAElBlC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMuC,OAElBnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMwC,iBAElBpC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKH,KAAKH,MAAMyC,aAElBrC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAACoC,EAAD,CACCJ,cAAenC,KAAKH,MAAMsC,cAC1BlB,UAAWjB,KAAKH,MAAMoB,kBAS/B,YA1D4BR,cA+DzC,SAAS8B,EAATvB,GAAoD,IAA5BmB,EAA4BnB,EAA5BmB,cAAelB,EAAaD,EAAbC,UACrC,WAAAe,OAAYQ,KAAKC,MAAON,EAAgBK,KAAKE,IAAI,GAAI,GAAMzB,EAAY,KAAO,eCjE3D0B,cACnB,SAAAA,EAAY9C,GAAO,IAAAP,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAArB,KAAA2C,IACjBrD,EAAA+B,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAsB,GAAAlB,KAAAzB,KAAMH,KAMR+C,cAAgB,WACa,WAAvBtD,EAAKoC,MAAMmB,QACbvD,EAAKwD,SAAS,CACZD,QAAS,KAGXvD,EAAKwD,SAAS,CACZD,QAAS,YAZbvD,EAAKoC,MAAQ,CACXmB,QAAS,UAHMvD,wEAoBjB,OAAIU,KAAKH,MAAMkD,GAEX9C,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,gBACbV,EAAAC,EAAAC,cAAA,OAAK6C,QAAShD,KAAK4C,eACjB3C,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,YACbV,EAAAC,EAAAC,cAAC8C,EAAD,CAASC,OAAQlD,KAAKH,MAAMkD,GAAGG,OAAQjC,UAAWjB,KAAKH,MAAMoB,aAE9DjB,KAAKH,MAAMkD,GAAGI,MAAQ,IAGzBlD,EAAAC,EAAAC,cAAA,SAAOQ,UAAWX,KAAK0B,MAAMmB,SAC3B5C,EAAAC,EAAAC,cAACiD,EAAD,CAAeC,QAASrD,KAAKH,MAAMkD,GAAGO,IAAKrC,UAAWjB,KAAKH,MAAMoB,cAKhE,YArCuBR,aA2CpC,SAAS2C,EAATpC,GACE,OADkCA,EAAXqC,QAEbE,IAAI,SAAAC,GAAM,OAChBvD,EAAAC,EAAAC,cAAA,SAAOsD,IAAKD,EAAOE,QACjBzD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBAGAF,EAAAC,EAAAC,cAAA,UACGqD,EAAOG,OAGZ1D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBAGAF,EAAAC,EAAAC,cAAA,UACGqD,EAAOE,SAGZzD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBAGAF,EAAAC,EAAAC,cAAA,UACGqD,EAAOhE,WAYpB,SAASyD,EAATW,GAAwC,IAArBV,EAAqBU,EAArBV,OAAQjC,EAAa2C,EAAb3C,UACrB4C,EAAW,EAKf,OAJAX,EAAOY,QAAQ,SAAAvE,GACbsE,GAAYtE,EAAMwE,SAASvE,QAP/B,SAAsBqE,EAAU5C,GAC9B,WAAAe,OAAYQ,KAAKC,MAAOoB,EAAWrB,KAAKE,IAAI,GAAI,GAAMzB,EAAY,KAAO,KASlE+C,CAAaH,EAAU5C,aCpFXgD,mLACV,IAAA3E,EAAAU,KACP,OAAIA,KAAKH,MAAMqE,KAAOlE,KAAKH,MAAMqE,IAAIC,OAAS,EAE1ClE,EAAAC,EAAAC,cAAA,OAAK0B,GAAG,UACN5B,EAAAC,EAAAC,cAAA,gDACEH,KAAKH,MAAMqE,IAAIX,IAAI,SAACR,GAAD,OACnB9C,EAAAC,EAAAC,cAACiE,EAAD,CAAQX,IAAKV,EAAGI,KAAMJ,GAAIA,EAAI9B,UAAW3B,EAAKO,MAAMoB,cAEtDhB,EAAAC,EAAAC,cAACkE,EAAD,CACEC,UAAWtE,KAAKH,MAAMyE,UACtBC,UAAWvE,KAAKH,MAAM0E,aAIrB,YAfuB9D,aAoBpC,SAAS4D,EAATrD,GAA2C,IAAzBsD,EAAyBtD,EAAzBsD,UAAWC,EAAcvD,EAAduD,UAC3B,OAAID,EAEArE,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACbV,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,YAAYqC,QAASuB,GAAvC,cAIG,eC5BUC,cACnB,SAAAA,EAAY3E,GAAO,IAAAP,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAArB,KAAAwE,GACjBlF,EAAA+B,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAmD,GAAA/C,KAAAzB,KAAMH,IACNA,EAAM4E,UAAU5E,EAAM6E,MAAMC,OAAOhB,MAFlBrE,oFAKC,IAAAS,EAAAC,KAClB4E,OAAOC,WAAc,WACnB9E,EAAKF,MAAM4E,UAAU1E,EAAKF,MAAM6E,MAAMC,OAAOhB,wCAK/C,OACE1D,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,WACdV,EAAAC,EAAAC,cAAC2E,EAAD,CACEC,SAAU/E,KAAKH,MAAMmF,MACrB/C,QAASjC,KAAKH,MAAM6E,MAAMC,OAAOhB,OACnC1D,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aAEbV,EAAAC,EAAAC,cAAC8E,EAAD,CACEC,aAAclF,KAAKH,MAAMqF,eAE3BjF,EAAAC,EAAAC,cAACgF,EAAD,CACEvD,eAAgB5B,KAAKH,MAAM+B,eAC3BK,QAASjC,KAAKH,MAAM6E,MAAMC,OAAOhB,KACjCzB,QAASlC,KAAKH,MAAMqC,QACpBC,cAAenC,KAAKH,MAAMsC,cAC1BC,KAAMpC,KAAKH,MAAMuC,KACjBC,eAAgBrC,KAAKH,MAAMwC,eAC3BC,WAAYtC,KAAKH,MAAMyC,WACvBrB,UAAWjB,KAAKH,MAAMoB,YAExBhB,EAAAC,EAAAC,cAACiF,EAAD,CACEb,UAAWvE,KAAKH,MAAM0E,UACtBD,UAAWtE,KAAKH,MAAMyE,UACtBrD,UAAWjB,KAAKH,MAAMoB,UACtBiD,IAAKlE,KAAKH,MAAMqE,eArCSzD,aA4CrC,SAASqE,EAAT9D,GACE,OAD8BA,EAAZ+D,SAER9E,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,SAAf,4BAEH,KAGT,SAASsE,EAATrB,GACE,OADiCA,EAAhBsB,aAOV,KAJHjF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBCnDjB0E,EAAa,mCAEbC,EAAW,uDAEXC,cACJ,SAAAA,EAAY1F,GAAO,IAAAP,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAArB,KAAAuF,IACjBjG,EAAA+B,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAkE,GAAA9D,KAAAzB,KAAMH,KAwBR2F,aAzBmBnE,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxF,EAAAyF,KAyBJ,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAxF,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIMC,MAAK,GAAArE,OAAIsD,IAJf,cAIXO,EAJWK,EAAAI,KAAAJ,EAAAE,KAAA,EAKEP,EAASC,OALX,OAKXA,EALWI,EAAAI,KAAAJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAOX5G,EAAKwD,SAAS,CACZ7B,UAAW,OARF,YAYT6E,EAAKU,OAAQV,EAAKU,KAAKT,OAZd,CAAAG,EAAAE,KAAA,gBAaHL,EAAWD,EAAKU,KAAhBT,OAEFC,EAAiBD,EAAO5B,OAAS,EAAK4B,EAAOU,QAAQ,KAfhDP,EAAAE,KAAA,GAiBL9G,EAAKwD,SAAS,CAClB7B,UAAWyF,SAASX,EAAOY,QAAQ,IAAK,IAAK,IAAMnE,KAAKE,IAAI,GAAIsD,KAlBvD,yBAAAE,EAAAU,SAAAhB,EAAA,iBAzBItG,EAgDnBQ,cAhDmB,eAAA8D,EAAAvC,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxF,EAAAyF,KAgDH,SAAAkB,EAAO5E,GAAP,OAAAyD,EAAAxF,EAAA+F,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACV9G,EAAKO,MAAMkH,QAAQC,WAAnB,YAAAhF,OAA4CC,KAC9C3C,EAAKO,MAAMkH,QAAQE,KAAnB,YAAAjF,OAAoCC,IACpC3C,EAAKmF,UAAUxC,IAHH,wBAAA6E,EAAAF,SAAAC,MAhDG,gBAAAK,GAAA,OAAAtD,EAAAuD,MAAAnH,KAAAoH,YAAA,GAAA9H,EAuDnBmF,UAvDmB,eAAA4C,EAAAhG,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxF,EAAAyF,KAuDP,SAAA2B,EAAOrF,GAAP,OAAAyD,EAAAxF,EAAA+F,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACJ9G,EAAKwD,SAAS,CAClBb,QAASA,EACTiD,cAAc,EACdtD,gBAAgB,EAChBoD,OAAO,EACPwC,OAAQ,EACRtD,IAAK,KAPG,OASV5E,EAAKmI,mBACLnI,EAAKoI,cAVK,wBAAAH,EAAAX,SAAAU,MAvDO,gBAAAK,GAAA,OAAAN,EAAAF,MAAAnH,KAAAoH,YAAA,GAAA9H,EAoEnBmI,iBApEmBpG,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxF,EAAAyF,KAoEA,SAAAiC,IAAA,IAAA3F,EAAA4D,EAAAC,EAAA+B,EAAAC,EAAAV,UAAA,OAAA1B,EAAAxF,EAAA+F,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAOnE,EAAP6F,EAAA3D,OAAA,QAAA6D,IAAAF,EAAA,GAAAA,EAAA,GAAiBxI,EAAKoC,MAAMO,QAA5B8F,EAAA5B,KAAA,EAKT0B,EALS,GAAA7F,OAKKC,EALL,qBAAAD,OAKgC1C,EAAKoC,MAAMuG,SAL3C,YAAAjG,OAK8D1C,EAAKoC,MAAM8F,QALzEO,EAAA3B,KAAA,EAMEC,MAAK,GAAArE,OAAIqD,GAAJrD,OAAiB6F,IANxB,cAMfhC,EANekC,EAAAzB,KAAAyB,EAAA3B,KAAA,EAOFP,EAASC,OAPP,OAOfA,EAPeiC,EAAAzB,KAAAyB,EAAA3B,KAAA,wBAAA2B,EAAA5B,KAAA,GAAA4B,EAAAxB,GAAAwB,EAAA,SAAAA,EAAAG,OAAA,SASR5I,EAAKwD,SAAS,CACnBb,QAAS,GACTiD,cAAc,EACdtD,gBAAgB,EAChBoD,OAAO,EACPd,IAAK,MAdQ,QAkBb5E,EAAKoC,MAAMwC,MACb4B,EAAK5B,IAAM5E,EAAKoC,MAAMwC,IAAIlC,OAAO8D,EAAK5B,MAGxC5E,EAAKwD,SAALzB,OAAA8G,EAAA,EAAA9G,CAAA,GACKyE,EADL,CAEEd,OAAO,EACPE,cAAc,EACdtD,gBAAgB,KA1BD,yBAAAmG,EAAAnB,SAAAgB,EAAA,kBApEAtI,EAkGnBiF,UAlGmBlD,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxF,EAAAyF,KAkGP,SAAAyC,IAAA,OAAA1C,EAAAxF,EAAA+F,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACJ9G,EAAKwD,SAAS,CAClB0E,OAAQlI,EAAKoC,MAAM8F,OAASlI,EAAKoC,MAAMuG,WAF/B,OAKN3I,EAAKoC,MAAM8F,QAAUlI,EAAKoC,MAAMU,KAAO9C,EAAKoC,MAAMuG,WACpD3I,EAAKmI,mBACLnI,EAAKwD,SAAS,CACZoC,cAAc,KARR,wBAAAmD,EAAAzB,SAAAwB,MAlGO9I,EA+GnBgJ,eAAiB,SAACvF,GAChBzD,EAAKwD,SAAS,SAAApB,GACZ,IAAMwC,EAAMxC,EAAMwC,IAElB,OADAA,EAAIqE,QAAQxF,GACL,CACLmB,MACA9B,KAAM9C,EAAKoC,MAAMU,KAAO,KAG5B9C,EAAKkJ,eAAezF,IAtHpBzD,EAAKoC,MAAQ,CACXO,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,eAAgB,KAChBC,WAAY,KACZ4B,IAAK,GACL+D,SAAU,GACVT,OAAQ,EACRtC,cAAc,EACdtD,gBAAgB,EAChBX,UAAW,KACX+D,OAAO,EACPyD,GAAI,MAGNnJ,EAAKkG,eACLkD,YAAY,WACVpJ,EAAKkG,gBACJ,KAtBclG,8EA2HJyD,GAAI,IAAAhD,EAAAC,KACjB+C,EAAGG,OAAOY,QAAQ,SAAAvE,GACZA,EAAMwE,SAASJ,OAAS5D,EAAK2B,MAAMO,SACrClC,EAAK+C,SAAS,CACZR,WAAavC,EAAK2B,MAAMY,YAAc/C,EAAMC,OAAS,GACrD2C,cAAgBpC,EAAK2B,MAAMS,eAAiB5C,EAAMC,OAAS,OAKjEuD,EAAGO,IAAIQ,QAAQ,SAAAN,GACTA,EAAOG,OAAS5D,EAAK2B,MAAMO,SAC7BlC,EAAK+C,SAAS,CACZT,eAAiBtC,EAAK2B,MAAMW,gBAAkBmB,EAAOhE,OAAS,GAC9D2C,cAAgBpC,EAAK2B,MAAMS,eAAiBqB,EAAOhE,OAAS,6CAMtD,IAAAmJ,EAAA3I,KACRA,KAAK0B,MAAM+G,IACbzI,KAAK0B,MAAM+G,GAAGG,QAEhB,IAAMH,EAAK,IAAII,UAvJD,gCAyJdJ,EAAGK,OAAS,WACVL,EAAGM,KAAH,iBACAN,EAAGM,KAAH,iDAAA/G,OAEY2G,EAAKjH,MAAMO,QAFvB,gBAMFwG,EAAGO,UAAY,SAAAC,GAAS,IAChBzC,EAASyC,EAATzC,MACNA,EAAO0C,KAAKC,MAAM3C,KAENA,EAAK4C,GACfT,EAAKL,eAAe9B,EAAK4C,GAG3BT,EAAK7F,SAAS,CACZ0E,OAAQmB,EAAKjH,MAAM8F,OAAS,KAIhCxH,KAAK8C,SAAS,CACZ2F,wCAIK,IAAAY,EAAArJ,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACbV,EAAAC,EAAAC,cAACmJ,EAAD,CACExJ,cAAeE,KAAKF,cACpBmC,QAASjC,KAAK0B,MAAMO,UAEtBhC,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAChBC,OAAQ,SAAC7J,GAAD,OAAWI,EAAAC,EAAAC,cAACwJ,EAADtI,OAAAuI,OAAA,GAAU/J,EAAV,CACjBC,cAAeuJ,EAAKvJ,oBAExBG,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAChBC,OAAQ,SAAC7J,GAAD,OAAWI,EAAAC,EAAAC,cAACwJ,EAADtI,OAAAuI,OAAA,GAAU/J,EAAV,CACjBC,cAAeuJ,EAAKvJ,oBAExBG,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAOE,KAAK,iBACVC,OAAQ,SAAC7J,GAAD,OAAWI,EAAAC,EAAAC,cAAC0J,EAADxI,OAAAuI,OAAA,GAAa/J,EAC1BwJ,EAAK3H,MADQ,CAEjB+C,UAAW4E,EAAK5E,UAChBxD,UAAWoI,EAAK3H,MAAMT,UACtBsD,UAAW8E,EAAK9E,UAChBD,UAAW+E,EAAK3H,MAAM8F,OAAS6B,EAAK3H,MAAMU,KAAOiH,EAAK3H,MAAMuG,eAEhEhI,EAAAC,EAAAC,cAAC2J,EAAD,CACE7I,UAAWjB,KAAK0B,MAAMT,oBAxMdR,aA8MHsJ,cAAWxE,GC/MXyE,EATF,kBACX/J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAC8J,EAAD,SCKcC,QACW,cAA7BtF,OAAOoC,SAASmD,UAEe,UAA7BvF,OAAOoC,SAASmD,UAEhBvF,OAAOoC,SAASmD,SAASzF,MACvB,2DCZN0F,IAASV,OAAOzJ,EAAAC,EAAAC,cAACkK,EAAD,MAAYC,SAASC,eAAe,SD2H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.688d1747.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBox extends Component {\n  getInputValue = () => {\n    return this.input.value;\n  }\n  \n  handleKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSearch();\n      this.input.value = '';\n    }\n  }\n\n  handleSearch = () => {\n    this.props.searchAddress(this.getInputValue());\n  }\n\n  render() {\n    return (            \n      <input\n        ref={(input) => this.input = input}\n        defaultValue={this.props.value}\n        onKeyUp={this.handleKeyUp}\n        placeholder={this.props.placeholderText} />\n    );\n  }\n}\n\nSearchBox.propTypes = {\n  searchAddress: PropTypes.func,\n  value: PropTypes.string,\n  placeholderText: PropTypes.string\n};","import React, { Component } from 'react';\nimport SearchBox from '../SearchBox/SearchBox.js';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"Header\">                \n        <div className=\"container\">                   \n          <span>\n            <Link to=\"/\"> H160 </Link>\n          </span>                   \n          <SearchBox \n            searchAddress={this.props.searchAddress}\n            placeholderText=\"Enter a Bitcoin Address\"/>\n        </div>                \n      </header>);\n  }\n}\n\nHeader.propTypes = {\n  searchAddress: PropTypes.func,   \n  spotPrice: PropTypes.string \n};","import React, { Component } from 'react';\nimport './Footer.scss';\n\nfunction SpotPrice( { spotPrice } ) {\n  if (spotPrice) {\n    return (\n      <div>\n        <span>\n          BTC:\n        </span>\n        <span className=\"spot-price\">        \n          ${ spotPrice }\n        </span> \n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"Footer\">                \n        <div className=\"container\">\n          <SpotPrice spotPrice={this.props.spotPrice}/>  \n        </div>                \n      </footer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Home.scss';\nimport SearchBox from '../SearchBox/SearchBox';\nimport PropTypes from 'prop-types';\n\nexport default class Home extends Component {\n  render() {    \n    return (\n      <main className=\"Home\">                \n        <div className=\"container\">\n          <h2>Hash160</h2>\n          <h4>Bitcoin Address Explorer</h4>\n          <SearchBox \n            searchAddress={this.props.searchAddress} \n            placeholderText=\"Enter a Bitcoin Address\"/>\n        </div>                \n      </main>\n    );    \n  }\n}\n\nHome.propTypes = {\n  searchAddress: PropTypes.func\n};","import React, { Component } from 'react';\nimport QRCode from'qrcode.react';\nimport PropTypes from 'prop-types';\nimport './AddressInfo.scss';\n\nexport default class AddressInfo extends Component { \n  constructor(props) {\n    super(props);\n    this.state = {\n      qrSize: 200\n    };    \n   \n  }  \n  render() {             \n    if (this.props.hasAddressData) {\n      return (\n        <div id=\"AddressInfo\" className=\"row\">        \n          <div>\n            <QRCode\n              size={this.state.qrSize}\n              value={`${this.props.address}`} />,\n          </div>        \n          <div>                \n            <table>      \n              <tbody>\n                <tr>\n                  <td>Address:</td>\n                  <td>{this.props.address}</td>\n                </tr>\n                <tr>\n                  <td>Hash160:</td>\n                  <td>{this.props.hash160}</td>\n                </tr>\n                <tr>\n                  <td>Final Balance:</td>\n                  <td>{this.props.final_balance}</td>\n                </tr>\n                <tr>\n                  <td>Total Tx:</td>\n                  <td>{this.props.n_tx}</td>\n                </tr>\n                <tr>\n                  <td>Total Received:</td>\n                  <td>{this.props.total_received}</td>\n                </tr>\n                <tr>\n                  <td>Total Sent:</td>\n                  <td>{this.props.total_sent}</td>\n                </tr>\n                <tr>\n                  <td>USD Value:</td>\n                  <td>                \n                    {<AccountValue \n                      final_balance={this.props.final_balance} \n                      spotPrice={this.props.spotPrice}/>\n                    }</td>\n                </tr>\n              </tbody>              \n            </table>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }     \n  }\n}\n\nfunction AccountValue({ final_balance, spotPrice }) {\n  return `$ ${Math.round((final_balance / Math.pow(10, 8)) * spotPrice * 100) / 100}`;\n}\n\nAddressInfo.propTypes = {\n  address: PropTypes.string,  \n  hasAddressData: PropTypes.bool,\n  hash160: PropTypes.string,\n  final_balance: PropTypes.number,\n  n_tx: PropTypes.number,\n  total_received: PropTypes.number,\n  total_sent: PropTypes.number,\n  spotPrice: PropTypes.number\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TxInfo.scss';\n\nexport default class TxInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'hidden'\n    };\n  }\n\n  toggleDisplay = () => {\n    if (this.state.display === 'hidden') {\n      this.setState({\n        display: ''\n      });\n    } else {\n      this.setState({\n        display: 'hidden'\n      });\n    }\n  }\n\n  render() {\n    if (this.props.tx) {      \n      return (\n        <div className=\"tx-info item\">\n          <div onClick={this.toggleDisplay}>\n            <div className=\"tx-price\">\n              <TxValue inputs={this.props.tx.inputs} spotPrice={this.props.spotPrice}/>\n            </div>\n            {this.props.tx.hash || ''}\n          </div>        \n\n          <table className={this.state.display}>                \n            <OutputDetails outputs={this.props.tx.out} spotPrice={this.props.spotPrice} />\n          </table>\n        </div>    \n      );\n    } else {\n      return null;\n    }\n    \n  }\n}\n\nfunction OutputDetails({ outputs }) {\n  return (\n    outputs.map(output => \n      <tbody key={output.script}>\n        <tr>\n          <td>\n                address:\n          </td>\n          <td>\n            {output.addr}\n          </td>\n        </tr>\n        <tr>                      \n          <td>\n                script:\n          </td>\n          <td>\n            {output.script}\n          </td>\n        </tr>\n        <tr>                      \n          <td>\n                BTC:\n          </td>\n          <td>\n            {output.value}\n          </td>\n        </tr>\n      </tbody>\n    )\n  );\n}\n\nfunction SpotPriceUSD(satoshis, spotPrice) {   \n  return `$ ${Math.round((satoshis / Math.pow(10, 8)) * spotPrice * 100) / 100}`; \n}\n\nfunction TxValue({ inputs, spotPrice }) {\n  let satoshis = 0;\n  inputs.forEach(input => {\n    satoshis += input.prev_out.value;\n  });\n  \n  return SpotPriceUSD(satoshis, spotPrice);\n}\n\nTxInfo.propTypes = {\n  tx: PropTypes.object,\n  spotPrice: PropTypes.number\n};","import React, { Component } from 'react';\nimport TxInfo from './TxInfo/TxInfo';\nimport PropTypes from 'prop-types';\nimport './TxList.scss';\n\n\nexport default class TxList extends Component { \n  render() {             \n    if (this.props.txs && this.props.txs.length > 0) {\n      return (\n        <div id=\"TxList\">         \n          <small>Click a tx to view more info...</small> \n          { this.props.txs.map((tx) =>             \n            <TxInfo key={tx.hash} tx={tx} spotPrice={this.props.spotPrice}/>  \n          ) }  \n          <MoreTx \n            hasMoreTx={this.props.hasMoreTx}  \n            getMoreTx={this.props.getMoreTx}/>           \n        </div>\n      );    \n    } else {\n      return null;\n    }     \n  }\n}\n\nfunction MoreTx({ hasMoreTx, getMoreTx })  {\n  if (hasMoreTx) {\n    return (\n      <div className=\"row\">\n        <button className=\"load-more\" onClick={getMoreTx}>Load More</button>\n      </div> \n    );\n  } else {\n    return null;\n  }\n}\n\nTxList.propTypes = {\n  txs: PropTypes.array,\n  spotPrice: PropTypes.number,\n  hasMoreTx: PropTypes.bool,\n  getMoreTx: PropTypes.func\n};\n","import React, { Component } from 'react';\nimport AddressInfo from './AddressInfo/AddressInfo';\nimport TxList from './TxList/TxList';\nimport PropTypes from 'prop-types';\nimport './Address.scss';\n\nexport default class Address extends Component { \n  constructor(props) {\n    super(props);\n    props.getTxData(props.match.params.addr);   \n  }\n\n  componentDidUpdate(){\n    window.onpopstate  = () => {\n      this.props.getTxData(this.props.match.params.addr);\n    };  \n  }\n\n  render() {                            \n    return (                        \n      <main className=\"Address\">                            \n        <ErrorMsg \n          didError={this.props.error}\n          address={this.props.match.params.addr}/>\n        <div className=\"container\">                    \n          \n          <Spinner \n            pageIsLoaded={this.props.pageIsLoaded} />\n                        \n          <AddressInfo\n            hasAddressData={this.props.hasAddressData}\n            address={this.props.match.params.addr}\n            hash160={this.props.hash160}\n            final_balance={this.props.final_balance}\n            n_tx={this.props.n_tx}\n            total_received={this.props.total_received}\n            total_sent={this.props.total_sent}\n            spotPrice={this.props.spotPrice}/>\n                \n          <TxList \n            getMoreTx={this.props.getMoreTx}\n            hasMoreTx={this.props.hasMoreTx}\n            spotPrice={this.props.spotPrice}\n            txs={this.props.txs}/>\n\n        </div>                \n      </main>);          \n  }\n}\n\nfunction ErrorMsg({ didError }) {    \n  if (didError) {\n    return (<div className=\"error\">Error, API Fetch Failed.</div>);\n  }\n  return null;\n}\n\nfunction Spinner({ pageIsLoaded }) {        \n  if (!pageIsLoaded) {        \n    return (\n      <div className=\"spinner-box\">                       \n        <div className=\"spinner\"></div>\n      </div>);\n  }\n  return null;\n}\n\nAddress.propTypes = {  \n  match: PropTypes.object,\n  error: PropTypes.bool,\n  address: PropTypes.string,\n  pageIsLoaded: PropTypes.bool,\n  hasAddressData: PropTypes.bool,\n  hash160: PropTypes.string,\n  final_balance: PropTypes.number,\n  n_tx: PropTypes.number,\n  total_received: PropTypes.number,\n  total_sent: PropTypes.number,\n  getMoreTx: PropTypes.func,\n  hasMoreTx: PropTypes.bool,\n  txs: PropTypes.array,\n  spotPrice: PropTypes.number,\n  didError: PropTypes.bool,\n  getTxData: PropTypes.func\n};\n\nErrorMsg.propTypes = {\n  didError: PropTypes.bool\n};\n\nSpinner.propTypes = {\n  pageIsLoaded: PropTypes.bool\n};","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Home from './components/Home/Home';\nimport Address from './components/Address/Address';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nimport './App.scss';\n\nconst addressAPI = 'https://blockchain.info/rawaddr/';\nconst socketAPI = 'wss://ws.blockchain.info/inv';\nconst priceAPI = 'https://api.coinbase.com/v2/prices/spot?currency=USD';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: null,\n      hash160: null,\n      final_balance: null,\n      n_tx: null,\n      total_received: null,\n      total_sent: null,\n      txs: [],\n      pageSize: 10,\n      offset: 0,\n      pageIsLoaded: true,\n      hasAddressData: false,\n      spotPrice: null,\n      error: false,\n      ws: null\n    };\n    \n    this.getSpotPrice();\n    setInterval(() => {\n      this.getSpotPrice();\n    }, 60 * 1000);\n  }\n\n  getSpotPrice = async () => {\n    let response;\n    let json;\n    try {      \n      response = await fetch(`${priceAPI}`);\n      json = await response.json();\n    } catch (e) {                              \n      this.setState({\n        spotPrice: null\n      });\n    }    \n    \n    if (json.data && json.data.amount) {\n      const { amount } = json.data;\n      \n      const decimalPlaces = (amount.length - 1) - amount.indexOf('.');\n\n      await this.setState({\n        spotPrice: parseInt(amount.replace('.', ''), 10) / Math.pow(10, decimalPlaces)\n      });      \n    }\n  }\n\n  searchAddress = async (address) => {    \n    if (this.props.history.location !== `/address/${address}`) {\n      this.props.history.push(`/address/${address}`);\n      this.getTxData(address);\n    }            \n  }\n\n  getTxData = async (address) => {    \n    await this.setState({   \n      address: address,   \n      pageIsLoaded: false,\n      hasAddressData: false,\n      error: false,\n      offset: 0,\n      txs: []\n    });\n    this.getTxsForAddress();\n    this.listenForTx();\n  }\n\n  getTxsForAddress = async (address = this.state.address) => {\n    let response;\n    let json;\n\n    try {\n      const endpoint = `${address}?cors=true&limit=${this.state.pageSize}&offset=${this.state.offset}`;\n      response = await fetch(`${addressAPI}${endpoint}`);\n      json = await response.json();\n    } catch (e) {                              \n      return this.setState({\n        address: \"\",\n        pageIsLoaded: true,\n        hasAddressData: false,\n        error: true,\n        txs: []\n      });\n    }        \n    \n    if (this.state.txs) {\n      json.txs = this.state.txs.concat(json.txs);\n    }\n\n    this.setState({\n      ...json,               \n      error: false,\n      pageIsLoaded: true,\n      hasAddressData: true,\n    });     \n  }\n\n  getMoreTx = async () => {\n    await this.setState({\n      offset: this.state.offset + this.state.pageSize\n    }); \n    \n    if (this.state.offset <= this.state.n_tx - this.state.pageSize) {      \n      this.getTxsForAddress();\n      this.setState({\n        pageIsLoaded: false\n      });\n    }    \n  }\n\n  addTransaction = (tx) => {\n    this.setState(state => {\n      const txs = state.txs;\n      txs.unshift(tx);\n      return {\n        txs,\n        n_tx: this.state.n_tx + 1\n      };\n    });    \n    this.updateBalances(tx);\n  }\n\n  updateBalances(tx) {    \n    tx.inputs.forEach(input => {\n      if (input.prev_out.addr === this.state.address) {\n        this.setState({\n          total_sent: (this.state.total_sent + (input.value || 0 )),\n          final_balance: (this.state.final_balance - (input.value || 0 ))\n        });\n      }\n    });\n\n    tx.out.forEach(output => {\n      if (output.addr === this.state.address) {\n        this.setState({\n          total_received: (this.state.total_received + (output.value || 0)),\n          final_balance: (this.state.final_balance + (output.value || 0))\n        });\n      }\n    });\n  }\n\n  listenForTx() {\n    if (this.state.ws) {\n      this.state.ws.close();      \n    }\n    const ws = new WebSocket(socketAPI);\n\n    ws.onopen = () => {    \n      ws.send(`{\"op\":\"ping\"}`);      \n      ws.send(`{\n        \"op\":\"addr_sub\", \n        \"addr\":\"${this.state.address}\"\n      }`);\n    };\n\n    ws.onmessage = event => {      \n      let { data } = event;      \n      data = JSON.parse(data);\n      \n      if (data && data.x) {\n        this.addTransaction(data.x);\n      } \n            \n      this.setState({\n        offset: this.state.offset + 1\n      });  \n    };    \n\n    this.setState({\n      ws\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          searchAddress={this.searchAddress}\n          address={this.state.address}/>\n          \n        <Route exact path=\"/\" \n          render={(props) => <Home {...props}             \n            searchAddress={this.searchAddress}/> } />\n          \n        <Route exact path=\"/h160\" \n          render={(props) => <Home {...props}             \n            searchAddress={this.searchAddress}/> } />\n            \n        <Route path=\"/address/:addr\"\n          render={(props) => <Address {...props}\n            {...this.state}\n            getTxData={this.getTxData} \n            spotPrice={this.state.spotPrice}           \n            getMoreTx={this.getMoreTx}\n            hasMoreTx={this.state.offset < this.state.n_tx - this.state.pageSize}/>}  />\n          \n        <Footer \n          spotPrice={this.state.spotPrice}/>  \n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n\nApp.propTypes = {\n  history: PropTypes.object\n};","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nconst Root = () => (  \n  <div>\n    <Router>\n      <App />\n    </Router>\n  </div>\n  \n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}